
# version: 1.0 # do not change format
# should i use a separate yaml file for each version update (config.v1.yml)

#
# ~/.config/cannon/cannon.yml (xdg.ConfigHome + "/cannon")
#

settings:
  # server address and port (select an unused port above 1023)
  server: http://localhost
  port: 8888

  # command and args to start the preview browser
  # set arg to enable auto-play for sound previews
  # requires the {url} placeholder arg in the correct position
  browser: [ 'brave-browser', '{url}' ]

  # browser polling time in milliseconds
  interval: 100

  # cannon will return this exit value from the command line: $ cannon <file>
  # lf requires a non-zero return value to disable caching
  exit: 255

  # precache this many files before and after the current file
  precache: 4

  # auto_start:  true # cannon <file> will start the server automatically
  # proc_count:  4    # do this many conversions concurrently

file_conversion_rules:
  #
  # command: must contain {input} and {output} params
  #          the output param may also specify an extension: {output}.jpg
  #     tag: must contain {src} param
  #
  -
    # native html5 image formats do not need any conversion and do not have a command field
    type: extension
    matches: [apng,avif,gif,jpg,jpeg,jfif,pjpeg,pjp,png,svg,webp]
    tag: <img src='{src}'>
  -
    # convert other image formats to jpg using imagemagick
    # TODO: add the rest of the extenstions here: $ convert identify -list format | less
    type: extension
    matches: [bmp,ico,cur,tif,tiff]
    command: ['convert', '{input}', '{output}.jpg']
    tag: <img src='{src}'>
  -
    #
    # convert pdf 1st page to jpg using imagemagick
    # imagemagick might require a policy change to allow this operation
    # edit the imagemagick policy file and grant "read | write" to the "PDF" pattern
    #   $ sudo nano /etc/ImageMagick-6/policy.xml
    # change the line that says
    #   <policy domain="coder" rights="none" pattern="PDF" />
    # to
    #   <policy domain="coder" rights="read | write" pattern="PDF" />
    #
    type: extension
    matches: [pdf]
    command: ['convert', '-density', '150', '{input}[0]', '-quality', '90', '{output}.jpg']
    tag: <img src='{src}'>
  # -
  #   type: mime
  #   matches: [application/text]
  #   command: more t.txt
  #   tag: head
