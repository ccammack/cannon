# version: 1.0 # do not change format
# should i use a separate yaml file for each version update (config.v1.yml)

#
# ~/.config/cannon/cannon.yml (xdg.ConfigHome + "/cannon")
#

settings:
  # server address and port (select an unused port above 1023)
  server: http://localhost
  port: 8888

  # command and args to start the preview browser
  # set arg to enable auto-play for sound previews
  # requires the {url} placeholder arg in the correct position
  # use command.default to specify the default command
  # use browser.<platform> to specify per-platform exceptions from the $GOOS list: https://go.dev/doc/install/source#environment
  browser:
    default: ["brave-browser", "{url}"]
    windows:
      [
        'C:\Program Files (x86)\Google\Chrome\Application\chrome.exe',
        "--autoplay-policy=no-user-gesture-required",
        "{url}",
      ]

  # browser polling time in milliseconds
  interval: 33

  # cannon will return this exit value from the command line: $ cannon <file>
  # lf requires a non-zero return value to disable caching
  exit: 255

  # precache this many files before and after the current file
  precache: 4

  # TODO: auto_start:  true # cannon <file> will start the server automatically
  # TODO: proc_count:  4    # do this many conversions concurrently

file_conversion_rules:
  #
  #    type: specify the type as either extension|mime
  # matches: specify the pattern to match
  # command: specify the file conversion command to run when a matching input file is found
  #          must contain {input} and {output} params in the right positions
  #          the output param may specify an extension: {output}.jpg
  #          use command.default to specify the default command
  #          use command.<platform> to specify per-platform exceptions from the $GOOS list: https://go.dev/doc/install/source#environment
  #     tag: must contain {src} param
  #
  - # native html5 image formats do not need any conversion and do not have a command field
    type: extension
    matches: [apng, avif, gif, jpg, jpeg, jfif, pjpeg, pjp, png, svg, webp]
    tag: <img src='{src}'>
  - # convert other image formats to jpg using imagemagick
    # TODO: add the rest of the extenstions here: $ magick identify -list format | less
    type: extension
    matches: [bmp, ico, cur, tif, tiff]
    command:
      default: ["convert", "{input}", "{output}.jpg"]
      windows: ["magick", "{input}", "{output}.jpg"]
    tag: <img src='{src}'>
  - #
    # use imagemagick to convert the 1st page of the pdf to jpg
    # imagemagick might require a policy change to allow this operation
    # edit the imagemagick policy file and grant "read | write" to the "PDF" pattern
    #   $ sudo nano /etc/ImageMagick-6/policy.xml
    # change the line that says
    #   <policy domain="coder" rights="none" pattern="PDF" />
    # to
    #   <policy domain="coder" rights="read | write" pattern="PDF" />
    #
    type: extension
    matches: [pdf]
    command:
      default:
        [
          "convert",
          "-density",
          "150",
          "{input}[0]",
          "-quality",
          "90",
          "{output}.jpg",
        ]
      windows:
        [
          "magick",
          "-density",
          "150",
          "{input}[0]",
          "-quality",
          "90",
          "{output}.jpg",
        ]
    tag: <img src='{src}'>
