# version: 1.0 # do not change format
# should i use a separate yaml file for each version update (config.v1.yml)

#
# ~/.config/cannon/cannon.yml (xdg.ConfigHome + "/cannon")
#

settings:
  # specify the server address and port (select an unused port above 1023)
  server: http://localhost
  port: 8888

  # specify command and args to start the preview browser
  #     use browser.default to specify the default command for all platforms
  #     use browser.<platform> to specify per-platform exceptions using the names in the $GOOS list: https://go.dev/doc/install/source#environment
  #     specify the {url} placeholder arg in the correct position so cannon can insert the server url
  #     specify the appropriate argument for the browser to enable auto-play for sound previews
  #     on Windows, it may be required to specify the full path to the command
  browser:
    default: ['brave-browser', '{url}']
    windows: ['C:\Program Files (x86)\Google\Chrome\Application\chrome.exe', '--autoplay-policy=no-user-gesture-required', '{url}']

  # browser polling time in milliseconds
  interval: 33

  # cannon will return this exit value from the command line: $ cannon <file>
  #     lf requires a non-zero return value to prevent it from trying to cache the file itself
  exit: 255

  # precache this many files before and after the current file to help sequential browsing
  precache: 4

  # TODO: auto_start:  true # cannon <file> will start the server automatically
  # TODO: proc_count:  4    # do this many conversions concurrently

file_conversion_rules:
  #
  # specify rules to convert each file type into its web-equivalent for display in the browser
  #        type: specify the type as 'extension' (TODO: add support for 'mime' and 'magic')
  #     matches: specify the per-type pattern to match
  #              match patterns may contain * for partial matches
  #     command: specify the file conversion command to run when a matching input file is found
  #              use command.default to specify the default command
  #              use command.<platform> to specify per-platform exceptions using the names in the $GOOS list: https://go.dev/doc/install/source#environment
  #              specify {input} and {output} placeholders in the right positions so cannon can insert the filenames
  #              the output param may specify an extension: {output}.jpg
  #              on Windows, it may be required to specify the full path to the command
  #         tag: must contain {src} param
  #

  - #
    # native html5 image formats do not need any conversion and do not specify a command
    #
    type: extension
    matches: [apng, avif, gif, jpg, jpeg, jfif, pjpeg, pjp, png, svg, webp]
    tag: <img src='{src}'>

  - #
    # convert other image formats to jpg using imagemagick
    # TODO: add the rest of the extensions here: $ magick identify -list format | less
    #
    type: extension
    matches: [bmp, ico, cur, tif, tiff]
    command:
      default: ['convert', '{input}', '{output}.jpg']
      windows: ['magick', '{input}', '{output}.jpg']
    tag: <img src='{src}'>

  - #
    # use 'mutool convert' to convert the 1st page of the pdf to png
    #
    # use imagemagick to convert the 1st page of the pdf to jpg
    # imagemagick might require a policy change to allow this operation
    # edit the imagemagick policy file and grant "read | write" to the "PDF" pattern
    #   $ sudo nano /etc/ImageMagick-6/policy.xml
    # change the line that says
    #   <policy domain="coder" rights="none" pattern="PDF" />
    # to
    #   <policy domain="coder" rights="read | write" pattern="PDF" />
    #
    type: extension
    matches: [pdf]
    command:
      default: ['convert', '{input}[0]', '{output}.png']
      windows: ['magick', '{input}[0]', '{output}.png']
    tag: <img src='{src}'>
